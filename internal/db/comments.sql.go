// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: comments.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getCommentsByPostId = `-- name: GetCommentsByPostId :many
SELECT c.id, c.post_id, c.user_id, c.content, c.created_at, users.username
FROM comments c
JOIN users on users.id = c.user_id
WHERE c.post_id = $1
ORDER BY c.created_at DESC
`

type GetCommentsByPostIdRow struct {
	ID        int64              `json:"id"`
	PostID    int64              `json:"post_id"`
	UserID    int64              `json:"user_id"`
	Content   string             `json:"content"`
	CreatedAt pgtype.Timestamptz `json:"created_at"`
	Username  string             `json:"username"`
}

func (q *Queries) GetCommentsByPostId(ctx context.Context, postID int64) ([]GetCommentsByPostIdRow, error) {
	rows, err := q.db.Query(ctx, getCommentsByPostId, postID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []GetCommentsByPostIdRow
	for rows.Next() {
		var i GetCommentsByPostIdRow
		if err := rows.Scan(
			&i.ID,
			&i.PostID,
			&i.UserID,
			&i.Content,
			&i.CreatedAt,
			&i.Username,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
